{
  "contractName": "DonationService",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "campaigns",
      "outputs": [
        {
          "name": "campaign_name",
          "type": "string"
        },
        {
          "name": "campaign_address",
          "type": "address"
        },
        {
          "name": "numFunders",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "ownerincrease",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "startTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "ownerdecrease",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Trx_usage",
      "outputs": [
        {
          "name": "usage_to",
          "type": "string"
        },
        {
          "name": "usage_value",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "send_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "usage",
          "type": "string"
        }
      ],
      "name": "use_money_log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "_ownerincrease",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "_ownerdecrease",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "campaign_name",
          "type": "string"
        },
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "newCampaign",
      "outputs": [
        {
          "name": "campaignID",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "campaignID",
          "type": "uint256"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "contribute",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_usage",
          "type": "string"
        }
      ],
      "name": "use_money",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"campaigns\",\"outputs\":[{\"name\":\"campaign_name\",\"type\":\"string\"},{\"name\":\"campaign_address\",\"type\":\"address\"},{\"name\":\"numFunders\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"campaign_name\",\"type\":\"string\"},{\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"newCampaign\",\"outputs\":[{\"name\":\"campaignID\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ownerincrease\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"campaignID\",\"type\":\"uint256\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"contribute\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ownerdecrease\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_usage\",\"type\":\"string\"}],\"name\":\"use_money\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Trx_usage\",\"outputs\":[{\"name\":\"usage_to\",\"type\":\"string\"},{\"name\":\"usage_value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"send_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"usage\",\"type\":\"string\"}],\"name\":\"use_money_log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"_ownerincrease\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"_ownerdecrease\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"An uint256 representing the amount owned by the passed address.\"},\"burn(uint256)\":{\"details\":\"Burns a specific amount of tokens.\",\"params\":{\"value\":\"The amount of token to be burned.\"}},\"burnFrom(address,uint256)\":{\"details\":\"Burns a specific amount of tokens from the target address and decrements allowance\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"value\":\"uint256 The amount of token to be burned\"}},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token for a specified address\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/hyunki/blockchain/BlockDonation/Block_donation/contracts/DonationService.sol\":\"DonationService\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/hyunki/blockchain/BlockDonation/Block_donation/contracts/BlockDonation.sol\":{\"keccak256\":\"0x9fac48320d5bd8fa90debc2dfcc94ac2e52c816b2fbbcac71c270fe67e611882\",\"urls\":[\"bzzr://d1dfe02be6614b84de5f85f9f7e903739afd6dd7da438c67978d356622807ef0\"]},\"/home/hyunki/blockchain/BlockDonation/Block_donation/contracts/DonationService.sol\":{\"keccak256\":\"0xea282e4bbe2b3df62f04d5742280fb072d92899fa2c085bf8c2e03867c9b5a16\",\"urls\":[\"bzzr://31fcd6f3f0be838ad75406dde69796e145175ffc443a448b12abd8d6019aafac\"]},\"/home/hyunki/blockchain/BlockDonation/Block_donation/contracts/ERC20.sol\":{\"keccak256\":\"0xa67c3a7d4074f354863fe76695349b554fc693f48008ef2a49fcd982a66e5e6c\",\"urls\":[\"bzzr://61a17e19985022da9a538a50b92c23ecffd3c303498dd97ecf01e4a943ea2e5a\"]},\"/home/hyunki/blockchain/BlockDonation/Block_donation/contracts/ERC20Burnable.sol\":{\"keccak256\":\"0x407a437ef637be62e40a85dd379997c4a8e6fd302b341c9ae8ccf7143f58cab4\",\"urls\":[\"bzzr://4eed1da42aca86357f627a6c4958b31dfdba22763266b83df179a11dba830bb9\"]},\"/home/hyunki/blockchain/BlockDonation/Block_donation/contracts/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\"]},\"/home/hyunki/blockchain/BlockDonation/Block_donation/contracts/Ownable.sol\":{\"keccak256\":\"0x20ea512e4b1acf5ce9d82a8d7e8e73fa5e731ae5ef4942785fa6bc416cab209d\",\"urls\":[\"bzzr://23db22dc78d40ad861984302f406b6616cff4db2bc019097f90126d2bad278d9\"]},\"/home/hyunki/blockchain/BlockDonation/Block_donation/contracts/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280600d81526020017f426c6f636b446f6e6174696f6e00000000000000000000000000000000000000815250600490805190602001906200005192919062000308565b506040518060400160405280600281526020017f4244000000000000000000000000000000000000000000000000000000000000815250600590805190602001906200009f92919062000308565b50601260065533600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a34260078190555062000181336402540be4006200018760201b60201c565b620003b7565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620001c257600080fd5b620001de81600254620002e860201b62001eeb1790919060201c565b6002819055506200023c816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620002e860201b62001eeb1790919060201c565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600080828401905083811015620002fe57600080fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200034b57805160ff19168380011785556200037c565b828001600101855582156200037c579182015b828111156200037b5782518255916020019190600101906200035e565b5b5090506200038b91906200038f565b5090565b620003b491905b80821115620003b057600081600090555060010162000396565b5090565b90565b61266980620003c76000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c806378e97925116100de57806392d4a46711610097578063a9059cbb11610071578063a9059cbb14610903578063b556cc3914610969578063dd62ed3e14610a17578063f2fde38b14610a8f57610173565b806392d4a4671461075557806395d89b411461081a578063a457c2d71461089d57610173565b806378e979251461061757806379cc6790146106355780638c590917146106835780638da5cb5b146106bb5780638e4c948b146107055780638f32d59b1461073357610173565b8063313ce56711610130578063313ce567146104d557806339509351146104f357806342966c681461055957806367c473711461058757806370a08231146105b5578063715018a61461060d57610173565b806306fdde0314610178578063095ea7b3146101fb578063141961bc1461026157806318160ddd1461034257806319dddd0e1461036057806323b872dd1461044f575b600080fd5b610180610ad3565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101c05780820151818401526020810190506101a5565b50505050905090810190601f1680156101ed5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102476004803603604081101561021157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b71565b604051808215151515815260200191505060405180910390f35b61028d6004803603602081101561027757600080fd5b8101908080359060200190929190505050610c9c565b60405180806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828103825285818151815260200191508051906020019080838360005b838110156103055780820151818401526020810190506102ea565b50505050905090810190601f1680156103325780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b61034a610d7e565b6040518082815260200191505060405180910390f35b6104396004803603604081101561037657600080fd5b810190808035906020019064010000000081111561039357600080fd5b8201836020820111156103a557600080fd5b803590602001918460018302840111640100000000831117156103c757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d88565b6040518082815260200191505060405180910390f35b6104bb6004803603606081101561046557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e59565b604051808215151515815260200191505060405180910390f35b6104dd611061565b6040518082815260200191505060405180910390f35b61053f6004803603604081101561050957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611067565b604051808215151515815260200191505060405180910390f35b6105856004803603602081101561056f57600080fd5b810190808035906020019092919050505061129c565b005b6105b36004803603602081101561059d57600080fd5b81019080803590602001909291905050506112a9565b005b6105f7600480360360208110156105cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611367565b6040518082815260200191505060405180910390f35b6106156113af565b005b61061f6114ea565b6040518082815260200191505060405180910390f35b6106816004803603604081101561064b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114f0565b005b6106b96004803603604081101561069957600080fd5b8101908080359060200190929190803590602001909291905050506114fe565b005b6106c3611600565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107316004803603602081101561071b57600080fd5b810190808035906020019092919050505061162a565b005b61073b6116e8565b604051808215151515815260200191505060405180910390f35b6108186004803603604081101561076b57600080fd5b81019080803590602001909291908035906020019064010000000081111561079257600080fd5b8201836020820111156107a457600080fd5b803590602001918460018302840111640100000000831117156107c657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611740565b005b61082261184e565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610862578082015181840152602081019050610847565b50505050905090810190601f16801561088f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6108e9600480360360408110156108b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118ec565b604051808215151515815260200191505060405180910390f35b61094f6004803603604081101561091957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611b21565b604051808215151515815260200191505060405180910390f35b6109956004803603602081101561097f57600080fd5b8101908080359060200190929190505050611b38565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156109db5780820151818401526020810190506109c0565b50505050905090810190601f168015610a085780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b610a7960048036036040811015610a2d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bf4565b6040518082815260200191505060405180910390f35b610ad160048036036020811015610aa557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c7b565b005b60048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b695780601f10610b3e57610100808354040283529160200191610b69565b820191906000526020600020905b815481529060010190602001808311610b4c57829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610bac57600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6009602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d485780601f10610d1d57610100808354040283529160200191610d48565b820191906000526020600020905b815481529060010190602001808311610d2b57829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154905083565b6000600254905090565b60006008600081548092919060010191905055905060405180606001604052808481526020018373ffffffffffffffffffffffffffffffffffffffff1681526020016000815250600960008381526020019081526020016000206000820151816000019080519060200190610dfe9291906124f2565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015590505092915050565b6000610eea82600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d0190919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f75848484611d21565b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600190509392505050565b60065481565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156110a257600080fd5b61113182600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611eeb90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6112a63382611f0a565b50565b6112b16116e8565b611323576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61132d338261205c565b7f7efed113ff875a8aead0a413390b19b028eb35b3f29269aa14c11cafd7d9d8b6816040518082815260200191505060405180910390a150565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6113b76116e8565b611429576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60075481565b6114fa82826121ae565b5050565b600060096000848152602001908152602001600020905060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001838152602001600081525081600301600083600201600081548092919060010191905055815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201559050506115fa8160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683611b21565b50505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6116326116e8565b6116a4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6116ae3382611f0a565b7fdfb870574871e04c4595d84ac8b3096dba021d7270c46afeec4f015cf958a49c816040518082815260200191505060405180910390a150565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b80600b6000600a548152602001908152602001600020600001908051906020019061176c929190612572565b5081600b6000600a54815260200190815260200160002060010181905550600a600081548092919060010191905055506117a63383611f0a565b7fbbf802ee7f8cb847d93a960644f615b958877d707273c7d71e8020d72f9fe78d82826040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561180f5780820151818401526020810190506117f4565b50505050905090810190601f16801561183c5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a15050565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118e45780601f106118b9576101008083540402835291602001916118e4565b820191906000526020600020905b8154815290600101906020018083116118c757829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561192757600080fd5b6119b682600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d0190919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000611b2e338484611d21565b6001905092915050565b600b602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611be45780601f10611bb957610100808354040283529160200191611be4565b820191906000526020600020905b815481529060010190602001808311611bc757829003601f168201915b5050505050908060010154905082565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b611c836116e8565b611cf5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611cfe816123ac565b50565b600082821115611d1057600080fd5b600082840390508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d5b57600080fd5b611dac816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d0190919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611e3f816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611eeb90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600080828401905083811015611f0057600080fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611f4457600080fd5b611f5981600254611d0190919063ffffffff16565b600281905550611fb0816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d0190919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561209657600080fd5b6120ab81600254611eeb90919063ffffffff16565b600281905550612102816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611eeb90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b61223d81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d0190919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506122c78282611f0a565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612432576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806126186026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061253357805160ff1916838001178555612561565b82800160010185558215612561579182015b82811115612560578251825591602001919060010190612545565b5b50905061256e91906125f2565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106125b357805160ff19168380011785556125e1565b828001600101855582156125e1579182015b828111156125e05782518255916020019190600101906125c5565b5b5090506125ee91906125f2565b5090565b61261491905b808211156126105760008160009055506001016125f8565b5090565b9056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a165627a7a72305820cdaabd8ea93d5db879ce368e68cd7d9fe2e692a4c4eee869b7baa594fe03c2fd0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c806378e97925116100de57806392d4a46711610097578063a9059cbb11610071578063a9059cbb14610903578063b556cc3914610969578063dd62ed3e14610a17578063f2fde38b14610a8f57610173565b806392d4a4671461075557806395d89b411461081a578063a457c2d71461089d57610173565b806378e979251461061757806379cc6790146106355780638c590917146106835780638da5cb5b146106bb5780638e4c948b146107055780638f32d59b1461073357610173565b8063313ce56711610130578063313ce567146104d557806339509351146104f357806342966c681461055957806367c473711461058757806370a08231146105b5578063715018a61461060d57610173565b806306fdde0314610178578063095ea7b3146101fb578063141961bc1461026157806318160ddd1461034257806319dddd0e1461036057806323b872dd1461044f575b600080fd5b610180610ad3565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101c05780820151818401526020810190506101a5565b50505050905090810190601f1680156101ed5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102476004803603604081101561021157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b71565b604051808215151515815260200191505060405180910390f35b61028d6004803603602081101561027757600080fd5b8101908080359060200190929190505050610c9c565b60405180806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828103825285818151815260200191508051906020019080838360005b838110156103055780820151818401526020810190506102ea565b50505050905090810190601f1680156103325780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b61034a610d7e565b6040518082815260200191505060405180910390f35b6104396004803603604081101561037657600080fd5b810190808035906020019064010000000081111561039357600080fd5b8201836020820111156103a557600080fd5b803590602001918460018302840111640100000000831117156103c757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d88565b6040518082815260200191505060405180910390f35b6104bb6004803603606081101561046557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e59565b604051808215151515815260200191505060405180910390f35b6104dd611061565b6040518082815260200191505060405180910390f35b61053f6004803603604081101561050957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611067565b604051808215151515815260200191505060405180910390f35b6105856004803603602081101561056f57600080fd5b810190808035906020019092919050505061129c565b005b6105b36004803603602081101561059d57600080fd5b81019080803590602001909291905050506112a9565b005b6105f7600480360360208110156105cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611367565b6040518082815260200191505060405180910390f35b6106156113af565b005b61061f6114ea565b6040518082815260200191505060405180910390f35b6106816004803603604081101561064b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506114f0565b005b6106b96004803603604081101561069957600080fd5b8101908080359060200190929190803590602001909291905050506114fe565b005b6106c3611600565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107316004803603602081101561071b57600080fd5b810190808035906020019092919050505061162a565b005b61073b6116e8565b604051808215151515815260200191505060405180910390f35b6108186004803603604081101561076b57600080fd5b81019080803590602001909291908035906020019064010000000081111561079257600080fd5b8201836020820111156107a457600080fd5b803590602001918460018302840111640100000000831117156107c657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611740565b005b61082261184e565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610862578082015181840152602081019050610847565b50505050905090810190601f16801561088f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6108e9600480360360408110156108b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118ec565b604051808215151515815260200191505060405180910390f35b61094f6004803603604081101561091957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611b21565b604051808215151515815260200191505060405180910390f35b6109956004803603602081101561097f57600080fd5b8101908080359060200190929190505050611b38565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156109db5780820151818401526020810190506109c0565b50505050905090810190601f168015610a085780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b610a7960048036036040811015610a2d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bf4565b6040518082815260200191505060405180910390f35b610ad160048036036020811015610aa557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611c7b565b005b60048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610b695780601f10610b3e57610100808354040283529160200191610b69565b820191906000526020600020905b815481529060010190602001808311610b4c57829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610bac57600080fd5b81600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6009602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d485780601f10610d1d57610100808354040283529160200191610d48565b820191906000526020600020905b815481529060010190602001808311610d2b57829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154905083565b6000600254905090565b60006008600081548092919060010191905055905060405180606001604052808481526020018373ffffffffffffffffffffffffffffffffffffffff1681526020016000815250600960008381526020019081526020016000206000820151816000019080519060200190610dfe9291906124f2565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015590505092915050565b6000610eea82600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d0190919063ffffffff16565b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610f75848484611d21565b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600190509392505050565b60065481565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156110a257600080fd5b61113182600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611eeb90919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6112a63382611f0a565b50565b6112b16116e8565b611323576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61132d338261205c565b7f7efed113ff875a8aead0a413390b19b028eb35b3f29269aa14c11cafd7d9d8b6816040518082815260200191505060405180910390a150565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6113b76116e8565b611429576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60075481565b6114fa82826121ae565b5050565b600060096000848152602001908152602001600020905060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001838152602001600081525081600301600083600201600081548092919060010191905055815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201559050506115fa8160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683611b21565b50505050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6116326116e8565b6116a4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6116ae3382611f0a565b7fdfb870574871e04c4595d84ac8b3096dba021d7270c46afeec4f015cf958a49c816040518082815260200191505060405180910390a150565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b80600b6000600a548152602001908152602001600020600001908051906020019061176c929190612572565b5081600b6000600a54815260200190815260200160002060010181905550600a600081548092919060010191905055506117a63383611f0a565b7fbbf802ee7f8cb847d93a960644f615b958877d707273c7d71e8020d72f9fe78d82826040518083815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561180f5780820151818401526020810190506117f4565b50505050905090810190601f16801561183c5780820380516001836020036101000a031916815260200191505b50935050505060405180910390a15050565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118e45780601f106118b9576101008083540402835291602001916118e4565b820191906000526020600020905b8154815290600101906020018083116118c757829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561192757600080fd5b6119b682600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d0190919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000611b2e338484611d21565b6001905092915050565b600b602052806000526040600020600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611be45780601f10611bb957610100808354040283529160200191611be4565b820191906000526020600020905b815481529060010190602001808311611bc757829003601f168201915b5050505050908060010154905082565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b611c836116e8565b611cf5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611cfe816123ac565b50565b600082821115611d1057600080fd5b600082840390508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d5b57600080fd5b611dac816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d0190919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611e3f816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611eeb90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600080828401905083811015611f0057600080fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611f4457600080fd5b611f5981600254611d0190919063ffffffff16565b600281905550611fb0816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d0190919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561209657600080fd5b6120ab81600254611eeb90919063ffffffff16565b600281905550612102816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611eeb90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b61223d81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611d0190919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506122c78282611f0a565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612432576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806126186026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061253357805160ff1916838001178555612561565b82800160010185558215612561579182015b82811115612560578251825591602001919060010190612545565b5b50905061256e91906125f2565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106125b357805160ff19168380011785556125e1565b828001600101855582156125e1579182015b828111156125e05782518255916020019190600101906125c5565b5b5090506125ee91906125f2565b5090565b61261491905b808211156126105760008160009055506001016125f8565b5090565b9056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a165627a7a72305820cdaabd8ea93d5db879ce368e68cd7d9fe2e692a4c4eee869b7baa594fe03c2fd0029",
  "sourceMap": "56:1598:1:-;;;135:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;187:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;261:2;228:35;;666:10:7;657:6;;:19;;;;;;;;;;;;;;;;;;724:6;;;;;;;;;;;691:40;;720:1;691:40;;;;;;;;;;;;345:3:0;333:9;:15;;;;354:30;360:10;372:11;354:5;;;:30;;:::i;:::-;56:1598:1;;6189:263:2;6282:1;6263:21;;:7;:21;;;;6255:30;;;;;;6311:23;6328:5;6311:12;;:16;;;;;;:23;;;;:::i;:::-;6296:12;:38;;;;6365:29;6388:5;6365:9;:18;6375:7;6365:18;;;;;;;;;;;;;;;;:22;;;;;;:29;;;;:::i;:::-;6344:9;:18;6354:7;6344:18;;;;;;;;;;;;;;;:50;;;;6430:7;6409:36;;6426:1;6409:36;;;6439:5;6409:36;;;;;;;;;;;;;;;;;;6189:263;;:::o;1431:145:8:-;1489:7;1508:9;1524:1;1520;:5;1508:17;;1548:1;1543;:6;;1535:15;;;;;;1568:1;1561:8;;;1431:145;;;;:::o;56:1598:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "56:1598:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;56:1598:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;135:48:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;135:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2726:238:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2726:238:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;135:40:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;135:40:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;135:40:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;927:89:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;596:218:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;596:218:1;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;596:218:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;596:218:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;596:218:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;596:218:1;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3427:294:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3427:294:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;228:35:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4224:317:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4224:317:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;295:78:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;295:78:3;;;;;;;;;;;;;;;;;:::i;:::-;;448:184:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;448:184:0;;;;;;;;;;;;;;;;;:::i;:::-;;1225:104:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1225:104:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1599:137:7;;;:::i;:::-;;267:23:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;625:94:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;625:94:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;824:476:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;824:476:1;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;814:77:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;687:134:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;687:134:0;;;;;;;;;;;;;;;;;:::i;:::-;;1165:90:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1362:282:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1362:282:1;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1362:282:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1362:282:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1362:282:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1362:282:1;;;;;;;;;;;;;;;:::i;:::-;;187:37:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;187:37:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5049:327:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5049:327:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1953:137;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1953:137:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;463:39:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;463:39:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;463:39:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1660:129:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1660:129:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1885:107:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1885:107:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;135:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2726:238:2:-;2791:4;2834:1;2815:21;;:7;:21;;;;2807:30;;;;;;2880:5;2848:8;:20;2857:10;2848:20;;;;;;;;;;;;;;;:29;2869:7;2848:29;;;;;;;;;;;;;;;:37;;;;2921:7;2900:36;;2909:10;2900:36;;;2930:5;2900:36;;;;;;;;;;;;;;;;;;2953:4;2946:11;;2726:238;;;;:::o;135:40:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;927:89:2:-;971:7;997:12;;990:19;;927:89;:::o;596:218:1:-;683:15;722:12;;:14;;;;;;;;;;;;709:27;;770:37;;;;;;;;779:13;770:37;;;;793:11;770:37;;;;;;805:1;770:37;;;746:9;:21;756:10;746:21;;;;;;;;;;;:61;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;596:218;;;;:::o;3427:294:2:-;3506:4;3551:37;3582:5;3551:8;:14;3560:4;3551:14;;;;;;;;;;;;;;;:26;3566:10;3551:26;;;;;;;;;;;;;;;;:30;;:37;;;;:::i;:::-;3522:8;:14;3531:4;3522:14;;;;;;;;;;;;;;;:26;3537:10;3522:26;;;;;;;;;;;;;;;:66;;;;3598:26;3608:4;3614:2;3618:5;3598:9;:26::i;:::-;3654:10;3639:54;;3648:4;3639:54;;;3666:8;:14;3675:4;3666:14;;;;;;;;;;;;;;;:26;3681:10;3666:26;;;;;;;;;;;;;;;;3639:54;;;;;;;;;;;;;;;;;;3710:4;3703:11;;3427:294;;;;;:::o;228:35:0:-;;;;:::o;4224:317:2:-;4304:4;4347:1;4328:21;;:7;:21;;;;4320:30;;;;;;4393:45;4427:10;4393:8;:20;4402:10;4393:20;;;;;;;;;;;;;;;:29;4414:7;4393:29;;;;;;;;;;;;;;;;:33;;:45;;;;:::i;:::-;4361:8;:20;4370:10;4361:20;;;;;;;;;;;;;;;:29;4382:7;4361:29;;;;;;;;;;;;;;;:77;;;;4474:7;4453:60;;4462:10;4453:60;;;4483:8;:20;4492:10;4483:20;;;;;;;;;;;;;;;:29;4504:7;4483:29;;;;;;;;;;;;;;;;4453:60;;;;;;;;;;;;;;;;;;4530:4;4523:11;;4224:317;;;;:::o;295:78:3:-;342:24;348:10;360:5;342;:24::i;:::-;295:78;:::o;448:184:0:-;1018:9:7;:7;:9::i;:::-;1010:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;560:26:0;566:10;578:7;560:5;:26::i;:::-;601:24;617:7;601:24;;;;;;;;;;;;;;;;;;448:184;:::o;1225:104:2:-;1280:7;1306:9;:16;1316:5;1306:16;;;;;;;;;;;;;;;;1299:23;;1225:104;;;:::o;1599:137:7:-;1018:9;:7;:9::i;:::-;1010:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1697:1;1660:40;;1681:6;;;;;;;;;;;1660:40;;;;;;;;;;;;1727:1;1710:6;;:19;;;;;;;;;;;;;;;;;;1599:137::o;267:23:0:-;;;;:::o;625:94:3:-;690:22;700:4;706:5;690:9;:22::i;:::-;625:94;;:::o;824:476:1:-;891:18;912:9;:21;922:10;912:21;;;;;;;;;;;891:42;;1189:58;;;;;;;;1203:10;1189:58;;;;;;1223:7;1189:58;;;;1243:1;1189:58;;;1161:1;:9;;:25;1171:1;:12;;;:14;;;;;;;;;;;;1161:25;;;;;;;;;;;:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1257:36;1266:1;:18;;;;;;;;;;;;1285:7;1257:8;:36::i;:::-;;824:476;;;:::o;814:77:7:-;852:7;878:6;;;;;;;;;;;871:13;;814:77;:::o;687:134:0:-;1018:9:7;:7;:9::i;:::-;1010:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;750:26:0;756:10;768:7;750:5;:26::i;:::-;791:23;806:7;791:23;;;;;;;;;;;;;;;;;;687:134;:::o;1165:90:7:-;1205:4;1242:6;;;;;;;;;;;1228:20;;:10;:20;;;1221:27;;1165:90;:::o;1362:282:1:-;1476:6;1444:9;:20;1454:9;;1444:20;;;;;;;;;;;:29;;:38;;;;;;;;;;;;:::i;:::-;;1528:7;1493:9;:20;1503:9;;1493:20;;;;;;;;;;;:32;;:42;;;;1546:9;;:12;;;;;;;;;;;;;1568:25;1574:10;1585:7;1568:5;:25::i;:::-;1608:29;1622:7;1630:6;1608:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1608:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1362:282;;:::o;187:37:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5049:327:2:-;5134:4;5177:1;5158:21;;:7;:21;;;;5150:30;;;;;;5223:50;5257:15;5223:8;:20;5232:10;5223:20;;;;;;;;;;;;;;;:29;5244:7;5223:29;;;;;;;;;;;;;;;;:33;;:50;;;;:::i;:::-;5191:8;:20;5200:10;5191:20;;;;;;;;;;;;;;;:29;5212:7;5191:29;;;;;;;;;;;;;;;:82;;;;5309:7;5288:60;;5297:10;5288:60;;;5318:8;:20;5327:10;5318:20;;;;;;;;;;;;;;;:29;5339:7;5318:29;;;;;;;;;;;;;;;;5288:60;;;;;;;;;;;;;;;;;;5365:4;5358:11;;5049:327;;;;:::o;1953:137::-;2014:4;2030:32;2040:10;2052:2;2056:5;2030:9;:32::i;:::-;2079:4;2072:11;;1953:137;;;;:::o;463:39:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1660:129:2:-;1732:7;1758:8;:15;1767:5;1758:15;;;;;;;;;;;;;;;:24;1774:7;1758:24;;;;;;;;;;;;;;;;1751:31;;1660:129;;;;:::o;1885:107:7:-;1018:9;:7;:9::i;:::-;1010:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1957:28;1976:8;1957:18;:28::i;:::-;1885:107;:::o;1205:145:8:-;1263:7;1295:1;1290;:6;;1282:15;;;;;;1307:9;1323:1;1319;:5;1307:17;;1342:1;1335:8;;;1205:145;;;;:::o;5590:256:2:-;5691:1;5677:16;;:2;:16;;;;5669:25;;;;;;5723:26;5743:5;5723:9;:15;5733:4;5723:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;5705:9;:15;5715:4;5705:15;;;;;;;;;;;;;;;:44;;;;5775:24;5793:5;5775:9;:13;5785:2;5775:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;5759:9;:13;5769:2;5759:13;;;;;;;;;;;;;;;:40;;;;5829:2;5814:25;;5823:4;5814:25;;;5833:5;5814:25;;;;;;;;;;;;;;;;;;5590:256;;;:::o;1431:145:8:-;1489:7;1508:9;1524:1;1520;:5;1508:17;;1548:1;1543;:6;;1535:15;;;;;;1568:1;1561:8;;;1431:145;;;;:::o;6678:263:2:-;6771:1;6752:21;;:7;:21;;;;6744:30;;;;;;6800:23;6817:5;6800:12;;:16;;:23;;;;:::i;:::-;6785:12;:38;;;;6854:29;6877:5;6854:9;:18;6864:7;6854:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;6833:9;:18;6843:7;6833:18;;;;;;;;;;;;;;;:50;;;;6924:1;6898:36;;6907:7;6898:36;;;6928:5;6898:36;;;;;;;;;;;;;;;;;;6678:263;;:::o;6189:::-;6282:1;6263:21;;:7;:21;;;;6255:30;;;;;;6311:23;6328:5;6311:12;;:16;;:23;;;;:::i;:::-;6296:12;:38;;;;6365:29;6388:5;6365:9;:18;6375:7;6365:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;6344:9;:18;6354:7;6344:18;;;;;;;;;;;;;;;:50;;;;6430:7;6409:36;;6426:1;6409:36;;;6439:5;6409:36;;;;;;;;;;;;;;;;;;6189:263;;:::o;7330:255::-;7432:40;7466:5;7432:8;:17;7441:7;7432:17;;;;;;;;;;;;;;;:29;7450:10;7432:29;;;;;;;;;;;;;;;;:33;;:40;;;;:::i;:::-;7400:8;:17;7409:7;7400:17;;;;;;;;;;;;;;;:29;7418:10;7400:29;;;;;;;;;;;;;;;:72;;;;7482:21;7488:7;7497:5;7482;:21::i;:::-;7536:10;7518:60;;7527:7;7518:60;;;7548:8;:17;7557:7;7548:17;;;;;;;;;;;;;;;:29;7566:10;7548:29;;;;;;;;;;;;;;;;7518:60;;;;;;;;;;;;;;;;;;7330:255;;:::o;2093:225:7:-;2186:1;2166:22;;:8;:22;;;;2158:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2275:8;2246:38;;2267:6;;;;;;;;;;;2246:38;;;;;;;;;;;;2303:8;2294:6;;:17;;;;;;;;;;;;;;;;;;2093:225;:::o;56:1598:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./BlockDonation.sol\";\n\ncontract DonationService is BlockDonation {\n     \n     uint numCampaigns;\n     mapping(uint=>campaign) public campaigns;\n     \n     struct campaign{\n     string campaign_name;\n     address campaign_address;\n     uint numFunders;\n     mapping(uint => funder) funders;\n     }\n     \n     struct funder{\n        address addr;\n        uint amount;\n        uint total_fund;\n     }\n     \n     uint Trx_index;\n     mapping (uint =>usage) public Trx_usage;\n     \n     struct usage{\n     string usage_to;\n     uint usage_value;\n     }\n    \n     \n    function newCampaign(string memory campaign_name, address beneficiary) public returns (uint campaignID){\n        campaignID = numCampaigns++;\n        campaigns[campaignID] = campaign(campaign_name,beneficiary,0);\n    }\n    \n    function contribute(uint campaignID, uint _amount) public{\n        campaign storage c = campaigns[campaignID];\n        // Creates a new temporary memory struct, initialised with the given values\n        // and copies it over to storage.\n        // Note that you can also use Funder(msg.sender, msg.value) to initialise.\n        \n        c.funders[c.numFunders++] = funder({addr: msg.sender, amount: _amount, total_fund:0 });\n        transfer(c.campaign_address,_amount);\n    }\n    event use_money_log(uint send_amount, string usage);\n    function use_money(uint _amount, string memory _usage) public{\n         \n         Trx_usage[Trx_index].usage_to = _usage;\n         Trx_usage[Trx_index].usage_value = _amount;\n         Trx_index ++;\n        _burn(msg.sender,_amount);\n        emit use_money_log(_amount,_usage);\n    }\n\n     \n\n}",
  "sourcePath": "/home/hyunki/blockchain/BlockDonation/Block_donation/contracts/DonationService.sol",
  "ast": {
    "absolutePath": "/home/hyunki/blockchain/BlockDonation/Block_donation/contracts/DonationService.sol",
    "exportedSymbols": {
      "DonationService": [
        220
      ]
    },
    "id": 221,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 79,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/home/hyunki/blockchain/BlockDonation/Block_donation/contracts/BlockDonation.sol",
        "file": "./BlockDonation.sol",
        "id": 80,
        "nodeType": "ImportDirective",
        "scope": 221,
        "sourceUnit": 78,
        "src": "25:29:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 81,
              "name": "BlockDonation",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 77,
              "src": "84:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BlockDonation_$77",
                "typeString": "contract BlockDonation"
              }
            },
            "id": 82,
            "nodeType": "InheritanceSpecifier",
            "src": "84:13:1"
          }
        ],
        "contractDependencies": [
          77,
          652,
          683,
          752,
          989
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 220,
        "linearizedBaseContracts": [
          220,
          77,
          989,
          683,
          652,
          752
        ],
        "name": "DonationService",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 84,
            "name": "numCampaigns",
            "nodeType": "VariableDeclaration",
            "scope": 220,
            "src": "111:17:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 83,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "111:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 88,
            "name": "campaigns",
            "nodeType": "VariableDeclaration",
            "scope": 220,
            "src": "135:40:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_campaign_$99_storage_$",
              "typeString": "mapping(uint256 => struct DonationService.campaign)"
            },
            "typeName": {
              "id": 87,
              "keyType": {
                "id": 85,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "143:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "135:23:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_campaign_$99_storage_$",
                "typeString": "mapping(uint256 => struct DonationService.campaign)"
              },
              "valueType": {
                "contractScope": null,
                "id": 86,
                "name": "campaign",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 99,
                "src": "149:8:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_campaign_$99_storage_ptr",
                  "typeString": "struct DonationService.campaign"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "DonationService.campaign",
            "id": 99,
            "members": [
              {
                "constant": false,
                "id": 90,
                "name": "campaign_name",
                "nodeType": "VariableDeclaration",
                "scope": 99,
                "src": "210:20:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 89,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "210:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 92,
                "name": "campaign_address",
                "nodeType": "VariableDeclaration",
                "scope": 99,
                "src": "237:24:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 91,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "237:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 94,
                "name": "numFunders",
                "nodeType": "VariableDeclaration",
                "scope": 99,
                "src": "268:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 93,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "268:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 98,
                "name": "funders",
                "nodeType": "VariableDeclaration",
                "scope": 99,
                "src": "290:31:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_funder_$106_storage_$",
                  "typeString": "mapping(uint256 => struct DonationService.funder)"
                },
                "typeName": {
                  "id": 97,
                  "keyType": {
                    "id": 95,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "298:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "290:23:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_funder_$106_storage_$",
                    "typeString": "mapping(uint256 => struct DonationService.funder)"
                  },
                  "valueType": {
                    "contractScope": null,
                    "id": 96,
                    "name": "funder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 106,
                    "src": "306:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_funder_$106_storage_ptr",
                      "typeString": "struct DonationService.funder"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "campaign",
            "nodeType": "StructDefinition",
            "scope": 220,
            "src": "188:141:1",
            "visibility": "public"
          },
          {
            "canonicalName": "DonationService.funder",
            "id": 106,
            "members": [
              {
                "constant": false,
                "id": 101,
                "name": "addr",
                "nodeType": "VariableDeclaration",
                "scope": 106,
                "src": "364:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 100,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "364:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 103,
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 106,
                "src": "386:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 102,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "386:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 105,
                "name": "total_fund",
                "nodeType": "VariableDeclaration",
                "scope": 106,
                "src": "407:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 104,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "407:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "funder",
            "nodeType": "StructDefinition",
            "scope": 220,
            "src": "341:89:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 108,
            "name": "Trx_index",
            "nodeType": "VariableDeclaration",
            "scope": 220,
            "src": "442:14:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 107,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "442:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 112,
            "name": "Trx_usage",
            "nodeType": "VariableDeclaration",
            "scope": 220,
            "src": "463:39:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_usage_$117_storage_$",
              "typeString": "mapping(uint256 => struct DonationService.usage)"
            },
            "typeName": {
              "id": 111,
              "keyType": {
                "id": 109,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "472:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "463:22:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_usage_$117_storage_$",
                "typeString": "mapping(uint256 => struct DonationService.usage)"
              },
              "valueType": {
                "contractScope": null,
                "id": 110,
                "name": "usage",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 117,
                "src": "479:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_usage_$117_storage_ptr",
                  "typeString": "struct DonationService.usage"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "DonationService.usage",
            "id": 117,
            "members": [
              {
                "constant": false,
                "id": 114,
                "name": "usage_to",
                "nodeType": "VariableDeclaration",
                "scope": 117,
                "src": "534:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 113,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "534:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 116,
                "name": "usage_value",
                "nodeType": "VariableDeclaration",
                "scope": 117,
                "src": "556:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 115,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "556:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "usage",
            "nodeType": "StructDefinition",
            "scope": 220,
            "src": "515:65:1",
            "visibility": "public"
          },
          {
            "body": {
              "id": 141,
              "nodeType": "Block",
              "src": "699:115:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 126,
                      "name": "campaignID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "709:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "722:14:1",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 127,
                        "name": "numCampaigns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
                        "src": "722:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "709:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "709:27:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 131,
                        "name": "campaigns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "746:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_campaign_$99_storage_$",
                          "typeString": "mapping(uint256 => struct DonationService.campaign storage ref)"
                        }
                      },
                      "id": 133,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 132,
                        "name": "campaignID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 124,
                        "src": "756:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "746:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_campaign_$99_storage",
                        "typeString": "struct DonationService.campaign storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 135,
                          "name": "campaign_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 119,
                          "src": "779:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 136,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121,
                          "src": "793:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "805:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 134,
                        "name": "campaign",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "770:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_campaign_$99_storage_ptr_$",
                          "typeString": "type(struct DonationService.campaign storage pointer)"
                        }
                      },
                      "id": 138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "770:37:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_campaign_$99_memory",
                        "typeString": "struct DonationService.campaign memory"
                      }
                    },
                    "src": "746:61:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_campaign_$99_storage",
                      "typeString": "struct DonationService.campaign storage ref"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "746:61:1"
                }
              ]
            },
            "documentation": null,
            "id": 142,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newCampaign",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "name": "campaign_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "617:27:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "617:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 121,
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "646:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "646:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "616:50:1"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "name": "campaignID",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "683:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "683:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "682:17:1"
            },
            "scope": 220,
            "src": "596:218:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "881:419:1",
              "statements": [
                {
                  "assignments": [
                    150
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 150,
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "scope": 176,
                      "src": "891:18:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_campaign_$99_storage_ptr",
                        "typeString": "struct DonationService.campaign"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 149,
                        "name": "campaign",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 99,
                        "src": "891:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_campaign_$99_storage_ptr",
                          "typeString": "struct DonationService.campaign"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 154,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 151,
                      "name": "campaigns",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "912:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_campaign_$99_storage_$",
                        "typeString": "mapping(uint256 => struct DonationService.campaign storage ref)"
                      }
                    },
                    "id": 153,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 152,
                      "name": "campaignID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "922:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "912:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_campaign_$99_storage",
                      "typeString": "struct DonationService.campaign storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "891:42:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 155,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 150,
                          "src": "1161:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_campaign_$99_storage_ptr",
                            "typeString": "struct DonationService.campaign storage pointer"
                          }
                        },
                        "id": 160,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "funders",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 98,
                        "src": "1161:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_funder_$106_storage_$",
                          "typeString": "mapping(uint256 => struct DonationService.funder storage ref)"
                        }
                      },
                      "id": 161,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "1171:14:1",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 157,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 150,
                            "src": "1171:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_campaign_$99_storage_ptr",
                              "typeString": "struct DonationService.campaign storage pointer"
                            }
                          },
                          "id": 158,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "numFunders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 94,
                          "src": "1171:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1161:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_funder_$106_storage",
                        "typeString": "struct DonationService.funder storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 163,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1132,
                            "src": "1203:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1203:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 165,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 146,
                          "src": "1223:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1243:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 162,
                        "name": "funder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "1189:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_funder_$106_storage_ptr_$",
                          "typeString": "type(struct DonationService.funder storage pointer)"
                        }
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "addr",
                        "amount",
                        "total_fund"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1189:58:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_funder_$106_memory",
                        "typeString": "struct DonationService.funder memory"
                      }
                    },
                    "src": "1161:86:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_funder_$106_storage",
                      "typeString": "struct DonationService.funder storage ref"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "1161:86:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 171,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 150,
                          "src": "1266:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_campaign_$99_storage_ptr",
                            "typeString": "struct DonationService.campaign storage pointer"
                          }
                        },
                        "id": 172,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "campaign_address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 92,
                        "src": "1266:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 173,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "1285:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 170,
                      "name": "transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 296,
                      "src": "1257:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1257:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "1257:36:1"
                }
              ]
            },
            "documentation": null,
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contribute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144,
                  "name": "campaignID",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "844:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "844:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 146,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "861:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "861:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "843:31:1"
            },
            "returnParameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "881:0:1"
            },
            "scope": 220,
            "src": "824:476:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 183,
            "name": "use_money_log",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "indexed": false,
                  "name": "send_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 183,
                  "src": "1325:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1325:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 181,
                  "indexed": false,
                  "name": "usage",
                  "nodeType": "VariableDeclaration",
                  "scope": 183,
                  "src": "1343:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1343:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1324:32:1"
            },
            "src": "1305:52:1"
          },
          {
            "body": {
              "id": 218,
              "nodeType": "Block",
              "src": "1423:221:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 190,
                          "name": "Trx_usage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 112,
                          "src": "1444:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_usage_$117_storage_$",
                            "typeString": "mapping(uint256 => struct DonationService.usage storage ref)"
                          }
                        },
                        "id": 192,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 191,
                          "name": "Trx_index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 108,
                          "src": "1454:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1444:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_usage_$117_storage",
                          "typeString": "struct DonationService.usage storage ref"
                        }
                      },
                      "id": 193,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "usage_to",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 114,
                      "src": "1444:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 194,
                      "name": "_usage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 187,
                      "src": "1476:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1444:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "1444:38:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 197,
                          "name": "Trx_usage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 112,
                          "src": "1493:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_usage_$117_storage_$",
                            "typeString": "mapping(uint256 => struct DonationService.usage storage ref)"
                          }
                        },
                        "id": 199,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 198,
                          "name": "Trx_index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 108,
                          "src": "1503:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1493:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_usage_$117_storage",
                          "typeString": "struct DonationService.usage storage ref"
                        }
                      },
                      "id": 200,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "usage_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 116,
                      "src": "1493:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 201,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 185,
                      "src": "1528:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1493:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "1493:42:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1546:12:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 204,
                      "name": "Trx_index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "1546:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "1546:12:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 208,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1132,
                          "src": "1574:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1574:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 210,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "1585:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 207,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 609,
                      "src": "1568:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1568:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "1568:25:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 214,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "1622:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 215,
                        "name": "_usage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "1630:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 213,
                      "name": "use_money_log",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 183,
                      "src": "1608:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1608:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 217,
                  "nodeType": "EmitStatement",
                  "src": "1603:34:1"
                }
              ]
            },
            "documentation": null,
            "id": 219,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "use_money",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 185,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "1381:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1381:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 187,
                  "name": "_usage",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "1395:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1395:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1380:36:1"
            },
            "returnParameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1423:0:1"
            },
            "scope": 220,
            "src": "1362:282:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 221,
        "src": "56:1598:1"
      }
    ],
    "src": "0:1654:1"
  },
  "legacyAST": {
    "absolutePath": "/home/hyunki/blockchain/BlockDonation/Block_donation/contracts/DonationService.sol",
    "exportedSymbols": {
      "DonationService": [
        220
      ]
    },
    "id": 221,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 79,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/home/hyunki/blockchain/BlockDonation/Block_donation/contracts/BlockDonation.sol",
        "file": "./BlockDonation.sol",
        "id": 80,
        "nodeType": "ImportDirective",
        "scope": 221,
        "sourceUnit": 78,
        "src": "25:29:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 81,
              "name": "BlockDonation",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 77,
              "src": "84:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BlockDonation_$77",
                "typeString": "contract BlockDonation"
              }
            },
            "id": 82,
            "nodeType": "InheritanceSpecifier",
            "src": "84:13:1"
          }
        ],
        "contractDependencies": [
          77,
          652,
          683,
          752,
          989
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 220,
        "linearizedBaseContracts": [
          220,
          77,
          989,
          683,
          652,
          752
        ],
        "name": "DonationService",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 84,
            "name": "numCampaigns",
            "nodeType": "VariableDeclaration",
            "scope": 220,
            "src": "111:17:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 83,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "111:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 88,
            "name": "campaigns",
            "nodeType": "VariableDeclaration",
            "scope": 220,
            "src": "135:40:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_campaign_$99_storage_$",
              "typeString": "mapping(uint256 => struct DonationService.campaign)"
            },
            "typeName": {
              "id": 87,
              "keyType": {
                "id": 85,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "143:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "135:23:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_campaign_$99_storage_$",
                "typeString": "mapping(uint256 => struct DonationService.campaign)"
              },
              "valueType": {
                "contractScope": null,
                "id": 86,
                "name": "campaign",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 99,
                "src": "149:8:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_campaign_$99_storage_ptr",
                  "typeString": "struct DonationService.campaign"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "DonationService.campaign",
            "id": 99,
            "members": [
              {
                "constant": false,
                "id": 90,
                "name": "campaign_name",
                "nodeType": "VariableDeclaration",
                "scope": 99,
                "src": "210:20:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 89,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "210:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 92,
                "name": "campaign_address",
                "nodeType": "VariableDeclaration",
                "scope": 99,
                "src": "237:24:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 91,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "237:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 94,
                "name": "numFunders",
                "nodeType": "VariableDeclaration",
                "scope": 99,
                "src": "268:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 93,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "268:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 98,
                "name": "funders",
                "nodeType": "VariableDeclaration",
                "scope": 99,
                "src": "290:31:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_funder_$106_storage_$",
                  "typeString": "mapping(uint256 => struct DonationService.funder)"
                },
                "typeName": {
                  "id": 97,
                  "keyType": {
                    "id": 95,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "298:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "290:23:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_funder_$106_storage_$",
                    "typeString": "mapping(uint256 => struct DonationService.funder)"
                  },
                  "valueType": {
                    "contractScope": null,
                    "id": 96,
                    "name": "funder",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 106,
                    "src": "306:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_funder_$106_storage_ptr",
                      "typeString": "struct DonationService.funder"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "campaign",
            "nodeType": "StructDefinition",
            "scope": 220,
            "src": "188:141:1",
            "visibility": "public"
          },
          {
            "canonicalName": "DonationService.funder",
            "id": 106,
            "members": [
              {
                "constant": false,
                "id": 101,
                "name": "addr",
                "nodeType": "VariableDeclaration",
                "scope": 106,
                "src": "364:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 100,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "364:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 103,
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 106,
                "src": "386:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 102,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "386:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 105,
                "name": "total_fund",
                "nodeType": "VariableDeclaration",
                "scope": 106,
                "src": "407:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 104,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "407:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "funder",
            "nodeType": "StructDefinition",
            "scope": 220,
            "src": "341:89:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 108,
            "name": "Trx_index",
            "nodeType": "VariableDeclaration",
            "scope": 220,
            "src": "442:14:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 107,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "442:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 112,
            "name": "Trx_usage",
            "nodeType": "VariableDeclaration",
            "scope": 220,
            "src": "463:39:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_usage_$117_storage_$",
              "typeString": "mapping(uint256 => struct DonationService.usage)"
            },
            "typeName": {
              "id": 111,
              "keyType": {
                "id": 109,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "472:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "463:22:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_usage_$117_storage_$",
                "typeString": "mapping(uint256 => struct DonationService.usage)"
              },
              "valueType": {
                "contractScope": null,
                "id": 110,
                "name": "usage",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 117,
                "src": "479:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_usage_$117_storage_ptr",
                  "typeString": "struct DonationService.usage"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "DonationService.usage",
            "id": 117,
            "members": [
              {
                "constant": false,
                "id": 114,
                "name": "usage_to",
                "nodeType": "VariableDeclaration",
                "scope": 117,
                "src": "534:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 113,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "534:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 116,
                "name": "usage_value",
                "nodeType": "VariableDeclaration",
                "scope": 117,
                "src": "556:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 115,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "556:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "usage",
            "nodeType": "StructDefinition",
            "scope": 220,
            "src": "515:65:1",
            "visibility": "public"
          },
          {
            "body": {
              "id": 141,
              "nodeType": "Block",
              "src": "699:115:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 126,
                      "name": "campaignID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "709:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "722:14:1",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 127,
                        "name": "numCampaigns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
                        "src": "722:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "709:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "709:27:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 131,
                        "name": "campaigns",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "746:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_campaign_$99_storage_$",
                          "typeString": "mapping(uint256 => struct DonationService.campaign storage ref)"
                        }
                      },
                      "id": 133,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 132,
                        "name": "campaignID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 124,
                        "src": "756:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "746:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_campaign_$99_storage",
                        "typeString": "struct DonationService.campaign storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 135,
                          "name": "campaign_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 119,
                          "src": "779:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 136,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 121,
                          "src": "793:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "805:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 134,
                        "name": "campaign",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "770:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_campaign_$99_storage_ptr_$",
                          "typeString": "type(struct DonationService.campaign storage pointer)"
                        }
                      },
                      "id": 138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "770:37:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_campaign_$99_memory",
                        "typeString": "struct DonationService.campaign memory"
                      }
                    },
                    "src": "746:61:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_campaign_$99_storage",
                      "typeString": "struct DonationService.campaign storage ref"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "746:61:1"
                }
              ]
            },
            "documentation": null,
            "id": 142,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "newCampaign",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "name": "campaign_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "617:27:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "617:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 121,
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "646:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "646:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "616:50:1"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "name": "campaignID",
                  "nodeType": "VariableDeclaration",
                  "scope": 142,
                  "src": "683:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "683:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "682:17:1"
            },
            "scope": 220,
            "src": "596:218:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 176,
              "nodeType": "Block",
              "src": "881:419:1",
              "statements": [
                {
                  "assignments": [
                    150
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 150,
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "scope": 176,
                      "src": "891:18:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_campaign_$99_storage_ptr",
                        "typeString": "struct DonationService.campaign"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 149,
                        "name": "campaign",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 99,
                        "src": "891:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_campaign_$99_storage_ptr",
                          "typeString": "struct DonationService.campaign"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 154,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 151,
                      "name": "campaigns",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "912:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_campaign_$99_storage_$",
                        "typeString": "mapping(uint256 => struct DonationService.campaign storage ref)"
                      }
                    },
                    "id": 153,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 152,
                      "name": "campaignID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "922:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "912:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_campaign_$99_storage",
                      "typeString": "struct DonationService.campaign storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "891:42:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 155,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 150,
                          "src": "1161:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_campaign_$99_storage_ptr",
                            "typeString": "struct DonationService.campaign storage pointer"
                          }
                        },
                        "id": 160,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "funders",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 98,
                        "src": "1161:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_funder_$106_storage_$",
                          "typeString": "mapping(uint256 => struct DonationService.funder storage ref)"
                        }
                      },
                      "id": 161,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "1171:14:1",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 157,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 150,
                            "src": "1171:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_campaign_$99_storage_ptr",
                              "typeString": "struct DonationService.campaign storage pointer"
                            }
                          },
                          "id": 158,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "numFunders",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 94,
                          "src": "1171:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1161:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_funder_$106_storage",
                        "typeString": "struct DonationService.funder storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 163,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1132,
                            "src": "1203:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1203:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 165,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 146,
                          "src": "1223:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1243:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 162,
                        "name": "funder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "1189:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_funder_$106_storage_ptr_$",
                          "typeString": "type(struct DonationService.funder storage pointer)"
                        }
                      },
                      "id": 167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "addr",
                        "amount",
                        "total_fund"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1189:58:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_funder_$106_memory",
                        "typeString": "struct DonationService.funder memory"
                      }
                    },
                    "src": "1161:86:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_funder_$106_storage",
                      "typeString": "struct DonationService.funder storage ref"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "1161:86:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 171,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 150,
                          "src": "1266:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_campaign_$99_storage_ptr",
                            "typeString": "struct DonationService.campaign storage pointer"
                          }
                        },
                        "id": 172,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "campaign_address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 92,
                        "src": "1266:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 173,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 146,
                        "src": "1285:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 170,
                      "name": "transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 296,
                      "src": "1257:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1257:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 175,
                  "nodeType": "ExpressionStatement",
                  "src": "1257:36:1"
                }
              ]
            },
            "documentation": null,
            "id": 177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "contribute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144,
                  "name": "campaignID",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "844:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "844:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 146,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "861:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 145,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "861:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "843:31:1"
            },
            "returnParameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "881:0:1"
            },
            "scope": 220,
            "src": "824:476:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 183,
            "name": "use_money_log",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "indexed": false,
                  "name": "send_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 183,
                  "src": "1325:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1325:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 181,
                  "indexed": false,
                  "name": "usage",
                  "nodeType": "VariableDeclaration",
                  "scope": 183,
                  "src": "1343:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1343:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1324:32:1"
            },
            "src": "1305:52:1"
          },
          {
            "body": {
              "id": 218,
              "nodeType": "Block",
              "src": "1423:221:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 190,
                          "name": "Trx_usage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 112,
                          "src": "1444:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_usage_$117_storage_$",
                            "typeString": "mapping(uint256 => struct DonationService.usage storage ref)"
                          }
                        },
                        "id": 192,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 191,
                          "name": "Trx_index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 108,
                          "src": "1454:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1444:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_usage_$117_storage",
                          "typeString": "struct DonationService.usage storage ref"
                        }
                      },
                      "id": 193,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "usage_to",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 114,
                      "src": "1444:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 194,
                      "name": "_usage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 187,
                      "src": "1476:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1444:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "1444:38:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 197,
                          "name": "Trx_usage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 112,
                          "src": "1493:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_usage_$117_storage_$",
                            "typeString": "mapping(uint256 => struct DonationService.usage storage ref)"
                          }
                        },
                        "id": 199,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 198,
                          "name": "Trx_index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 108,
                          "src": "1503:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1493:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_usage_$117_storage",
                          "typeString": "struct DonationService.usage storage ref"
                        }
                      },
                      "id": 200,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "usage_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 116,
                      "src": "1493:32:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 201,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 185,
                      "src": "1528:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1493:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "1493:42:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1546:12:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 204,
                      "name": "Trx_index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 108,
                      "src": "1546:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "1546:12:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 208,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1132,
                          "src": "1574:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1574:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 210,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "1585:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 207,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 609,
                      "src": "1568:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1568:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 212,
                  "nodeType": "ExpressionStatement",
                  "src": "1568:25:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 214,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 185,
                        "src": "1622:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 215,
                        "name": "_usage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "1630:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 213,
                      "name": "use_money_log",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 183,
                      "src": "1608:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1608:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 217,
                  "nodeType": "EmitStatement",
                  "src": "1603:34:1"
                }
              ]
            },
            "documentation": null,
            "id": 219,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "use_money",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 185,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "1381:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1381:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 187,
                  "name": "_usage",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "1395:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1395:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1380:36:1"
            },
            "returnParameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1423:0:1"
            },
            "scope": 220,
            "src": "1362:282:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 221,
        "src": "56:1598:1"
      }
    ],
    "src": "0:1654:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x4C9893b25BD1118fdFAaBACEBAf338c12f32b953",
      "transactionHash": "0xd2dc0c3c98aeb73abbdcb5f79072cfe7c06a150358c71b207c5e4586438e223c"
    }
  },
  "schemaVersion": "3.0.10",
  "updatedAt": "2019-06-01T15:40:17.929Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "burn(uint256)": {
        "details": "Burns a specific amount of tokens.",
        "params": {
          "value": "The amount of token to be burned."
        }
      },
      "burnFrom(address,uint256)": {
        "details": "Burns a specific amount of tokens from the target address and decrements allowance",
        "params": {
          "from": "address The address which you want to send tokens from",
          "value": "uint256 The amount of token to be burned"
        }
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}